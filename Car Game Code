using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Car_Game
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            gameOver.Visible = false;
        }


        private void timer1_Tick(object sender, EventArgs e)
        {
            MidLine(gamespeed);// movement of middle lines to simulate car movement
            rocks(gamespeed); // movement of rocks in road
            coins(gamespeed); // movement of coins in road
            pointincrease(); // adjust points label
            gameover(); // game over execution
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }
        
        int collectedcoin = 0; // declare collected coin variable

        Random r = new Random(); // create random
        int x, y;
        void rocks (int speed)
        {
            if (rock1.Top >= 500)
            { 
                x = r.Next(225,375); // keeps rock 1 in lane
                rock1.Location = new Point(x, 0); // generates rock 1 in new location 
            }
            else { rock1.Top += speed; }

            if (rock2.Top >= 500)
            {
                x = r.Next(10, 200); // keeps rock 2 in lane
                rock2.Location = new Point(x, 0); // generates rock 2 in new location 
            }
            else { rock2.Top += speed; }
        }

        void coins (int speed)
        {
            if (coin1.Top >= 500)
            {
                x = r.Next(225, 375); // keeps coin 1 in lane
                coin1.Location = new Point(x, 0); // generates coin 1 in new location 
            }
            else { coin1.Top += speed; }

            if (coin2.Top >= 500)
            {
                x = r.Next(10, 200); // keeps coin 2 in lane
                coin2.Location = new Point(x, 0); // generates coin 2 in new location 
            }
            else { coin2.Top += speed; }
           
            if (coin3.Top >= 500)
            {
                x = r.Next(100, 250); // keeps coin 3 in lane
                coin3.Location = new Point(x, 0); // generates coin 3 in new location 
            }
            else { coin3.Top += speed; }
        }
        void gameover()
        {
            if (car.Bounds.IntersectsWith(rock1.Bounds)) // if car hits rock 1
            { timer1.Enabled = false; // stops movement
            gameOver.Visible = true; // game over message
            }
            if (car.Bounds.IntersectsWith(rock2.Bounds)) // if car hits rock 2
            {
                timer1.Enabled = false; // stops movement
                gameOver.Visible = true; // game over message
            }
        }
        void MidLine(int speed) 
        {
            if (pictureBox1.Top >= 500)
            { pictureBox1.Top = 0; }
            else { pictureBox1.Top += speed; }   // after movement of the middle lines, starts line 1 back at top
            pictureBox1.Top += speed;
            pictureBox2.Top += speed;
            pictureBox3.Top += speed;

        }

        void pointincrease()
        {
            if (car.Bounds.IntersectsWith(coin1.Bounds)) // if car hits coin 1
            {
                collectedcoin++;
                points.Text = "Points = " + collectedcoin.ToString(); // change points label
                x = r.Next(225, 375);
                coin1.Location = new Point(x, 0);   // moves coin after interaction
            }
           
            if (car.Bounds.IntersectsWith(coin2.Bounds)) // if car hits coin 2
            {
                collectedcoin++;
                points.Text = "Points = " + collectedcoin.ToString(); // change points label
                x = r.Next(10, 200);
                coin2.Location = new Point(x, 0); // moves coint after interaction
            }

            if (car.Bounds.IntersectsWith(coin3.Bounds)) // if car hits coin 3
            {
                collectedcoin++;
                points.Text = "Points = " + collectedcoin.ToString(); // change points label
                x = r.Next(100, 250);
                coin3.Location = new Point(x, 0); // moves coint after interaction
            }
        }



        int gamespeed = 0;
        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            if(e.KeyCode == Keys.Left) // movement of the car to the left via keyboard input
            { 
                if(car.Left > 25) // keeps car from going off screen to left
                    car.Left += -20; 
            }
            if (e.KeyCode == Keys.Right) // Movemenet of the car to the right via keyboard input
            { 
                if(car.Left<320) // keeps car from going off screen to the right
                car.Left += 20; 
            }
            if(e.KeyCode== Keys.Up) // increases "car speed"
            {
                if (gamespeed < 20)
                { gamespeed++; }
            }
            if(e.KeyCode == Keys.Down) // decreases "car speed"
            {
                if (gamespeed > 0)
                { gamespeed--; }
            }
        }
    }
}
